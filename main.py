import  telebot
from random import randint
from datetime import datetime
import requests
import os
import gdown
from flask import Flask, request

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN, parse_mode=None)

app =Flask(__name__)

@app.route('/')
def index():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"

@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_update([update])
    return '', 200


@bot.message_handler(commands=["start"])
def send_welcome(message):
    try:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = telebot.types.KeyboardButton(text="–ò–≥—Ä–∞ –≤ –∫—É–±–∏–∫")
        button2 = telebot.types.KeyboardButton(text="–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç")
        button3 = telebot.types.KeyboardButton(text="–û—Ç–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
        keyboard.add(button1, button2)
        bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç —è –±–æ—Ç", reply_markup=keyboard)
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")



@bot.message_handler(commands=["date"])
def date(message):
    try:
        bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å: " + str(datetime.today()))
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")


@bot.message_handler(commands=["random"])
def random(message):
    try:
        bot.send_message(message.chat.id, "–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: " + str(randint(1, 50)))
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['image'])
def send_image(message):
    try:
        file = open("image.jpg", 'rb')
        bot.send_photo(message.chat.id, file, caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–±–∞–∫–∏: ")
        file.close()
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")

 

@bot.message_handler(content_types=["text"])
def answer(message):
    try:
        text = message.text
        if text == "–ü—Ä–∏–≤–µ—Ç":
            bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç")
        elif text == "–ö–∞–∫ –¥–µ–ª–∞":
            bot.send_message(message.chat.id, "–æ—Ç–ª–∏—á–Ω–æ,–∫–∞–∫ —É —Ç–µ–±—è")
        elif text == "–ù–æ—Ä–º":
            bot.send_message(message.chat.id,"–ö–ª–∞—Å—Å")
        elif text == "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç":
            bot.send_message(message.chat.id, "–ë–æ—Ç—è—Ä–æ")
        elif text == "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç":
            bot.send_message(message.chat.id, "–Ø –≤–∏—Ä—Ç—É–∞–ª–∏–Ω—ã–π —É –º–µ–Ω—è –Ω–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞")
        elif text == "–†–∞—Å–∫–∞–∂–∏ —à—É—Ç–∫—É":
            bot.send_message(message.chat.id, "–º–∞–ª—ã—à –≤ –∑–æ–æ–ø–∞—Ä–∫–µ –≥–æ–≤–æ—Ä–∏—Ç –º–∞–º–µ: -–ú–∞–º–∞, —Å–º–æ—Ç—Ä–∏ –æ–±–µ–∑—å—è–Ω–∫–∞ –≤ –æ—á–∫–∞—Ö! -—Ç–∏—Ö–æ —ç—Ç–æ –∫–∞—Å—Å–∏—Ä.")
        elif text == "–•–æ—á—É –µ—â–µ —à—É—Ç–∫—É":
            bot.send_message(message.chat.id, "-—Ç—ã –≥–¥–µ? -–≤ –∞–¥—É - –∫–∞–∫ –∏–∑ —à–∫–æ–ª—ã –≤—ã–π–¥–µ—à—å –ø–æ–∑–≤–æ–Ω–∏")
        elif text == "–•–æ—á–µ—à—å –ø—Ä–∏–∫–æ–ª":
            bot.send_message(message.chat.id, "–Ω–µ—Ç –¥–∞–≤–∞–π —è")
        elif text == "–ù–µ—Ç —è":
            bot.send_message(message.chat.id, "–Ω–µ—Ç –¥–∞–≤–∞–π —è")
        elif text == "–ù–µ—Ç":
            bot.send_message(message.chat.id, "–¥–∞")
        elif text == "–õ–∞–¥–Ω–æ —Ç—ã":
            bot.send_message(message.chat.id, "–±–µ–∑ –ø–∞–Ω–∏–∫–∏ —Ç—ã –Ω–µ —Å—Ç–∞—Ä–µ–Ω—å–∫–∏–π")
        elif text == "–•–ê–•–ê –∫—Ä—É—Ç–æ":
            bot.send_message(message.chat.id, "–∞–≥–∞")


        elif text == "–û—Ç–≥–∞–¥–∞–π —á–∏—Å–ª–æ":

            keyboard3 = telebot.types.InlineKeyboardMarkup(row_width=3)
            butoton1 = telebot.types.InlineKeyboardButton("1", callback_data="1")
            butoton2 = telebot.types.InlineKeyboardButton("2", callback_data="2")
            butoton3 = telebot.types.InlineKeyboardButton("3", callback_data="3")
            butoton4 = telebot.types.InlineKeyboardButton("4", callback_data="4")
            butoton5 = telebot.types.InlineKeyboardButton("5", callback_data="5")
            butoton6 = telebot.types.InlineKeyboardButton("6", callback_data="6")
            keyboard3.add(butoton1, butoton2, butoton3, butoton4, butoton5, butoton6)
            bot.send_message(message.chat.id, "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –∫–æ—Ç–æ—Ä–æ–µ —è –∑–∞–≥–∞–¥–∞–ª", reply_markup=keyboard3)
        elif text == "–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç":
            value = bot.send_dice(message.chat.id, emoji='üé∞').dice.value
            if value in (1, 16, 22, 32, 43, 48):
                bot.send_message(message.chat.id, "–ü–æ–±–µ–¥–∞")
            elif value == 64:
                bot.send_message(message.chat.id, "Jackpot!")
            else:
                bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑")
        elif text == "–ò–≥—Ä–∞ –≤ –∫—É–±–∏–∫":

            keyboard2 = telebot.types.InlineKeyboardMarkup(row_width=3)
            butoton1 = telebot.types.InlineKeyboardButton("1", callback_data="1")
            butoton2 = telebot.types.InlineKeyboardButton("2", callback_data="2")
            butoton3 = telebot.types.InlineKeyboardButton("3", callback_data="3")
            butoton4 = telebot.types.InlineKeyboardButton("4", callback_data="4")
            butoton5 = telebot.types.InlineKeyboardButton("5", callback_data="5")
            butoton6 = telebot.types.InlineKeyboardButton("6", callback_data="6")
            keyboard2.add(butoton1, butoton2, butoton3, butoton4, butoton5, butoton6)
            bot.send_message(message.chat.id, "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –Ω–∞ –∫—É–±–∏–∫–µ", reply_markup=keyboard2)
        else:
            bot.send_message(message.chat.id, text)
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")

@bot.callback_query_handler(func=lambda call: call.data in ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10'))
def dice_answer(call):
    value = bot.send_dice(call.message.chat.id,  emoji='')
    if str(value) == call.data:
        bot.send_message(call.message.chat.id, "–ü–æ–±–µ–¥–∞")
    else:
        bot.send_message(call.message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑")


@bot.callback_query_handler(func=lambda call:call.data in ('1', '2', '3', '4', '5', '6'))
def dice_answer(call):
    value = bot.send_dice(call.message.chat.id, emoji='').dice_value
    if str(value) == call.data:
        bot.send_message(call.message.chat.id, "–ü–æ–±–µ–¥–∞")
    else:
        bot.send_message(call.message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑")



if __name__ == "__main__":
    server_url = os.getenv("RENDER_EXTERNAL_URL")
    if server_url and TOKEN:
        webhook_url = f"{server_url}/{TOKEN}"
        set_webhook_url = f"https://api.telegram.org/bot{TOKEN}/setWebhook?url={webhook_url}"
        try:
            r = requests.get(set_webhook_url)
            print("Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", r.text)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", e)

        port = int(os.environ.get("PORT", 10000))
        print(f"Starting server on port {port}")
        app.run(host='0.0.0.0', port=port)
    else:
        print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ pooling")
        bot.remove_webhook()
        bot.polling(none_stop=True)
